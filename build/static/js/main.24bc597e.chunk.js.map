{"version":3,"sources":["assets/images/slider/1-min.png","assets/images/slider/2-min.png","assets/images/slider/3-min.png","assets/images/slider/4-min.png","components/Start Page/Pannel/Burger.jsx","components/Start Page/Pannel/Lang.jsx","components/Start Page/Pannel/Pannel.jsx","components/Start Page/Content/HeaderContent.jsx","components/Start Page/Content/Content.jsx","components/Start Page/Slider/Slider.jsx","redux/sliders-reduser.js","components/Start Page/Slider/SliderContainer.jsx","components/Start Page/StartPage.jsx","components/Order Page/OrderPage.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","Burger","className","Lang","Pannel","HeaderContent","to","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Content","href","Slider","props","id","slider","currentId","slide","slides","dots","map","el","i","active","key","onClick","current","prev","next","src","img","alt","title","subtitle","initialState","slideOne","slideTwo","slideThree","slideFour","slidersReducer","state","action","type","length","slideId","SliderContainer","connect","dispatch","currentSlideAC","StartPage","OrderPage","App","path","exact","component","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24bc597e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1-min.770c9197.png\";","module.exports = __webpack_public_path__ + \"static/media/2-min.7a0718a5.png\";","module.exports = __webpack_public_path__ + \"static/media/3-min.38960155.png\";","module.exports = __webpack_public_path__ + \"static/media/4-min.69447c52.png\";","import React from 'react'\r\nimport './Pannel.sass'\r\n\r\nconst Burger = () => {\r\n\treturn (\r\n\t\t<div className='pannel__item'>\r\n\t\t\t<div className='pannel__burger'></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Burger;","import React from 'react'\r\nimport './Pannel.sass'\r\n\r\nconst Lang = () => {\r\n\treturn (\r\n\t\t<div className='pannel__item'>\r\n\t\t\t<div className='pannel__lang'>\r\n\t\t\t\t<span>Eng</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Lang;","import React from 'react'\r\nimport './Pannel.sass'\r\nimport Burger from './Burger'\r\nimport Lang from './Lang'\r\n\r\nconst Pannel = () => {\r\n\treturn (\r\n\t\t<div className='pannel'>\r\n\t\t\t<Burger/>\r\n\t\t\t<Lang/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Pannel;","import React from 'react'\r\nimport './Content.sass'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst HeaderContent = () => {\r\n\treturn (\r\n\t\t<div className='content__header'>\r\n\t\t\t<NavLink to='/' className='' >Need for Drive</NavLink>\r\n\t\t\t<span className='location'>\r\n\t\t\t\t<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"map-marker-alt\" className=\"svg-inline--fa fa-map-marker-alt fa-w-12\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\r\n\t\t\t\t\t<path fill=\"currentColor\"\r\n\t\t\t\t\t\td=\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\">\r\n\t\t\t\t\t</path>\r\n\t\t\t\t</svg>\r\n\t\t\tУльяновск\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HeaderContent;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Content.sass'\r\nimport HeaderContent from './HeaderContent'\r\nconst Content = () => {\r\n\treturn(\r\n\t\t<main className='content'>\r\n\t\t\t<HeaderContent/>\r\n\t\t\t<div className='content__desription'>\r\n\t\t\t\t<h1>Каршеринг</h1>\r\n\t\t\t\t<h2>Need for Drive</h2>\r\n\t\t\t\t<span>Поминутная аренда авто твоего города</span>\r\n\t\t\t\t<NavLink to='/orderpage'><button><span>Забронировать</span></button></NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className='content__footer'>\r\n\t\t\t\t<span>© 2016-2020 «Need for drive»</span>\r\n\t\t\t\t<a href='tel:+7 (495) 234-22-44'>8 (495) 234-22-44</a>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t)\r\n}\r\n \r\nexport default Content;","import React from 'react'\r\nimport './Slider.sass'\r\n\r\nconst Slider = (props) => {\r\n\tlet id = props.slider.currentId\r\n\tlet slide = props.slider.slides[id]\r\n\r\n\tconst dots = props.slider.dots.map((el, i) => {\r\n\t\tif (el.active === true ) {\r\n\t\t\treturn (\r\n\t\t\t\t<span key={el.id} className='slider-dots__item active' onClick={() => { props.current(i) }}></span>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<span key={el.id} className='slider-dots__item' onClick={() => { props.current(i) }}></span>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='slider'>\r\n\t\t\t<a href=\"/#\" className='slider__prev' onClick={() => { props.prev() }}><span>‹</span></a>\r\n\t\t\t<a href=\"/#\" className='slider__next' onClick={() => { props.next() }}><span>›</span></a>\r\n\t\t\t<div className='slider__item'>\r\n\t\t\t\t<img src={slide.img} alt=''/>\r\n\t\t\t\t<div className='slide__description'>\r\n\t\t\t\t\t<h2>{slide.title}</h2>\r\n\t\t\t\t\t<span>{slide.subtitle}</span>\r\n\t\t\t\t\t<button href=\"#\" ><span>Подробнее</span></button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"slider__dots\">\r\n\t\t\t\t{dots}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Slider;","import slideOne from '../assets/images/slider/1-min.png';\r\nimport slideTwo from '../assets/images/slider/2-min.png';\r\nimport slideThree from '../assets/images/slider/3-min.png';\r\nimport slideFour from '../assets/images/slider/4-min.png';\r\n\r\nconst NEXT = 'NEXT';\r\nconst PREV = 'PREV';\r\nconst CURRENT = 'CURRENT'\r\n\r\nlet initialState = {\r\n\tslides: [\r\n\t\t{ id: 1, img: slideOne, title: 'Бесплатный парковка', subtitle: 'Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.' },\r\n\t\t{ id: 2, img: slideTwo, title: 'Страховка', subtitle: 'Полная страховка страховка автомобиля' },\r\n\t\t{ id: 3, img: slideThree, title: 'Бензин', subtitle: 'Полный бак на любой заправке города за наш счёт' },\r\n\t\t{ id: 4, img: slideFour, title: 'Обслуживание', subtitle: 'Автомобиль проходит еженедельное ТО' }\r\n\t],\r\n\tdots:[\r\n\t\t{ id: 1, active: true },\r\n\t\t{ id: 2, active: false },\r\n\t\t{ id: 3, active: false },\r\n\t\t{ id: 4, active: false },\r\n\t],\r\n\tcurrentId: 0\r\n}\r\nconst slidersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase NEXT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentId: state.currentId === state.slides.length - 1 ? state.currentId = 0 : state.currentId + 1  \r\n\t\t\t}\r\n\t\tcase PREV:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentId: state.currentId === 0 ? state.currentId = state.slides.length - 1 : state.currentId - 1\r\n\t\t\t}\r\n\t\tcase CURRENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdots: state.dots.map(el =>{\r\n\t\t\t\t\treturn {...el, active: false }\r\n\t\t\t\t}).map(el => {\r\n\t\t\t\t\tif (el.id === action.slideId + 1) {\r\n\t\t\t\t\t\treturn {...el, active: true}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn el\r\n\t\t\t\t}),\r\n\t\t\t\tcurrentId: action.slideId\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport const prevSlideAC = () => ({ type: PREV})\r\nexport const nextSlideAC = () => ({ type: NEXT})\r\nexport const currentSlideAC =(slideId) => ({type: CURRENT, slideId})  \r\n\r\nexport default slidersReducer;","import Slider from './Slider'\r\nimport { connect } from 'react-redux';\r\nimport { nextSlideAC, prevSlideAC, currentSlideAC } from '../../../redux/sliders-reduser';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tslider: state.slides\r\n\t}\r\n}\r\nlet mapDispatchToprops = (dispatch) => {\r\n\treturn{\r\n\t\tnext: () => {\r\n\t\t\tdispatch(nextSlideAC())\r\n\t\t},\r\n\t\tprev: () => {\r\n\t\t\tdispatch(prevSlideAC())\r\n\t\t},\r\n\t\tcurrent: (slideId) => {\r\n\t\t\tdispatch(currentSlideAC(slideId))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst SliderContainer = connect(mapStateToProps, mapDispatchToprops) (Slider)\r\n\r\nexport default SliderContainer;","import React from 'react'\r\nimport Content from './Content/Content';\r\nimport SliderContainer from './Slider/SliderContainer';\r\n\r\nconst StartPage = () => {\r\n\treturn (\r\n\t\t<div className='start-page'>\r\n\t\t\t<Content/>\r\n\t\t\t<SliderContainer/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default StartPage;","import React from 'react'\r\nimport HeaderContent from '../Start Page/Content/HeaderContent'\r\n\r\nconst OrderPage = () => {\r\n\treturn (\r\n\t\t<div className='order-page'>\r\n\t\t\t<HeaderContent/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default OrderPage;","import React from 'react';\nimport Pannel from './components/Start Page/Pannel/Pannel';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StartPage from './components/Start Page/StartPage';\nimport OrderPage from './components/Order Page/OrderPage';\n\nconst App = () => {\n  return (\n\t  <BrowserRouter>\n\t\t<div className='app'>\n\t\t\t<Pannel/>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/' exact component={StartPage} />\n\t\t\t\t<Route path='/orderpage' component={OrderPage} />\n\t\t\t</Switch>\n\t\t</div>\n\t  </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\r\nimport slidersReducer from \"./sliders-reduser\";\r\n\r\n\r\nlet reducers = combineReducers ({\r\n\tslides: slidersReducer\r\n});\r\n\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store'\n\nReactDOM.render(\n  <React.StrictMode>\n\t<Provider store={store}>\n    \t<App />\n\t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}